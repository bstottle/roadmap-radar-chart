# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install python/node dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material
          npm install --save-dev rollup rollup-plugin-terser
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Bundle/minify
        run: |
          npm run build
          cp ./README.md ./docs/index.md
          cp ./src/RadarPie/RadarPie.min.js ./docs/roadmap/RadarPie/
          cp ./src/roadmap.csv ./docs/roadmap/
          cp ./src/style.css ./docs/roadmap/
          mkdocs build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'docs/site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
